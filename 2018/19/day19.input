#ip 1
addi 1 16 1  -- absolute jump to 16+1 (skipped in prog 2)
seti 1 8 2   -- set r2=1
seti 1 5 4   <---------- set r4=1 -
mulr 2 4 3   r3=r2*r4             |
eqrr 3 5 3   if r3==r5 then       |
addr 3 1 1     r0=r2+r0 (op on 7) |
addi 1 1 1                        |
addr 2 0 0   end                  |
addi 4 1 4   r4++                 |
gtrr 4 5 3   if r4 > r5 then      |
addr 1 3 1     r2++ (op on 12)    |
seti 2 8 1   else goto 2          |
addi 2 1 2   end                  |
gtrr 2 5 3   if r2 > r5 then      |
addr 3 1 1    exit (jump (16x16=256+1=257) END PROG)
seti 1 8 1   else GOTO 2 >---------
mulr 1 1 1   end
addi 5 2 5   r5=r5+2 -- begin program setup section here, creates large number
mulr 5 5 5   r5=r5*r5
mulr 1 5 5   r5=r1*r5
muli 5 11 5  r5=r5*11
addi 3 5 3   r3=r3+5
mulr 3 1 3   r3=r3*r1
addi 3 4 3   r3=r3+4
addr 5 3 5   r5=r5+r3
addr 1 0 1   r1=r1+r0 (??)
seti 0 7 1   absolute jump to 0
setr 1 1 3   r3=1
mulr 3 1 3   r3=r3*r1
addr 1 3 3   r3=r1+r3
mulr 1 3 3   r3=r1*r3
muli 3 14 3  r3=r3*14
mulr 3 1 3   r3=r3*r1
addr 5 3 5   r5=r5+r3
seti 0 9 0   r0=0
seti 0 0 1   r1=0
